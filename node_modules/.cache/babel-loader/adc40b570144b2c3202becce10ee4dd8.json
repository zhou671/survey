{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Documents\\\\react-survey\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport * as THREE from \"three\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport Registration from \"./components/Registration\";\nimport Loading from \"./components/Loading\";\nimport Rendering from \"./components/Rendering\";\nimport { useThree } from \"@react-three/fiber\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { Mesh } from \"three\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkuserurl = \"http://localhost:5000/api/checkuser/\";\nconst getobjfileurl = \"http://localhost:5000/api/getfile/\";\n\nfunction ObjToPrimitive({\n  url,\n  mat\n}) {\n  _s();\n\n  const [obj, setObj] = useState();\n  useMemo(() => new OBJLoader().load(url, setObj), [url]);\n\n  if (obj) {\n    obj.traverse(child => {\n      if (child instanceof Mesh) {\n        child.material = mat;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: obj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n}\n\n_s(ObjToPrimitive, \"LMPVYBeZMXjKXojMYmwlLSJqSas=\");\n\n_c = ObjToPrimitive;\n\nfunction App() {\n  _s2();\n\n  var file;\n  var preload;\n  const mat = new THREE.MeshPhongMaterial();\n  const [pageState, setState] = useState(0);\n  const [nextSeqId, setNextSeqId] = useState(0);\n  const [userId, setUserId] = useState('');\n  const [filename, setFilename] = useState('');\n\n  const handleLogin = userName => {\n    console.log(userName);\n    let xhttp = new XMLHttpRequest();\n    xhttp.open(\"GET\", checkuserurl + userName, true);\n    xhttp.addEventListener('load', () => {\n      console.log('Received an HTTP response.');\n      var jsonresp = JSON.parse(xhttp.response);\n      console.log(jsonresp);\n      setNextSeqId(parseInt(jsonresp.nextId));\n      setFilename(jsonresp.fileName);\n      setState(1);\n    });\n    xhttp.send();\n    setUserId(userName);\n  };\n\n  const load = () => {\n    const url = getobjfileurl + filename;\n    preload = ObjToPrimitive({\n      url: url,\n      mat\n    });\n    setState(2);\n  };\n\n  const onClick = () => {\n    setState(3);\n  };\n\n  let page;\n\n  if (pageState === 0) {\n    page = /*#__PURE__*/_jsxDEV(Registration, {\n      onRegister: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  } else if (pageState === 1) {\n    page = /*#__PURE__*/_jsxDEV(Loading, {\n      onload: load\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  } else if (pageState === 2) {\n    page = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Rendering, {\n        preload: preload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"model1\",\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this); //page = <Rendering file={file}/>;\n  } else if (pageState === 3) {\n    page = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Thanks!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  var camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: page\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"4PGNgZXP/N4l7m2bXHIcHOvnpRI=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ObjToPrimitive\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/jessi/Documents/react-survey/src/App.js"],"names":["React","useState","THREE","Header","Button","Registration","Loading","Rendering","useThree","OBJLoader","Mesh","useEffect","checkuserurl","getobjfileurl","ObjToPrimitive","url","mat","obj","setObj","useMemo","load","traverse","child","material","App","file","preload","MeshPhongMaterial","pageState","setState","nextSeqId","setNextSeqId","userId","setUserId","filename","setFilename","handleLogin","userName","console","log","xhttp","XMLHttpRequest","open","addEventListener","jsonresp","JSON","parse","response","parseInt","nextId","fileName","send","onClick","page","camera","PerspectiveCamera"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,QAAT,QAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,YAAY,GAAG,sCAArB;AACA,MAAMC,aAAa,GAAG,oCAAtB;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAxB,EAAsC;AAAA;;AACpC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,EAA9B;AACAkB,EAAAA,OAAO,CAAC,MAAM,IAAIV,SAAJ,GAAgBW,IAAhB,CAAqBL,GAArB,EAA0BG,MAA1B,CAAP,EAA0C,CAACH,GAAD,CAA1C,CAAP;;AACA,MAAIE,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACI,QAAJ,CAAcC,KAAD,IAAW;AACtB,UAAIA,KAAK,YAAYZ,IAArB,EAA2B;AACzBY,QAAAA,KAAK,CAACC,QAAN,GAAiBP,GAAjB;AACD;AACF,KAJD;AAKA,wBAAO;AAAW,MAAA,MAAM,EAAEC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAO,IAAP;AACD;;GAZQH,c;;KAAAA,c;;AAcT,SAASU,GAAT,GAAe;AAAA;;AACb,MAAIC,IAAJ;AACA,MAAIC,OAAJ;AACA,QAAMV,GAAG,GAAG,IAAId,KAAK,CAACyB,iBAAV,EAAZ;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwB5B,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMmC,WAAW,GAAIC,QAAD,IAAc;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,KAAK,GAAG,IAAIC,cAAJ,EAAZ;AACAD,IAAAA,KAAK,CAACE,IAAN,CAAW,KAAX,EAAkB9B,YAAY,GAACyB,QAA/B,EAAyC,IAAzC;AACAG,IAAAA,KAAK,CAACG,gBAAN,CAAuB,MAAvB,EAA+B,MAAM;AACjCL,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAIK,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWN,KAAK,CAACO,QAAjB,CAAf;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAb,MAAAA,YAAY,CAACiB,QAAQ,CAACJ,QAAQ,CAACK,MAAV,CAAT,CAAZ;AACAd,MAAAA,WAAW,CAACS,QAAQ,CAACM,QAAV,CAAX;AACArB,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACH,KAPD;AAQAW,IAAAA,KAAK,CAACW,IAAN;AACAlB,IAAAA,SAAS,CAACI,QAAD,CAAT;AACD,GAdD;;AAeA,QAAMjB,IAAI,GAAG,MAAM;AACjB,UAAML,GAAG,GAAGF,aAAa,GAACqB,QAA1B;AACAR,IAAAA,OAAO,GAAGZ,cAAc,CAAC;AAAEC,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA;AAAZ,KAAD,CAAxB;AACAa,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAJD;;AAKA,QAAMuB,OAAO,GAAG,MAAK;AACnBvB,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAFD;;AAGA,MAAIwB,IAAJ;;AACA,MAAGzB,SAAS,KAAK,CAAjB,EAAmB;AACjByB,IAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,MAAA,UAAU,EAAEjB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIR,SAAS,KAAK,CAAlB,EAAoB;AACzByB,IAAAA,IAAI,gBAAG,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEjC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA,IAAIQ,SAAS,KAAK,CAAlB,EAAoB;AACzByB,IAAAA,IAAI,gBACJ;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE3B;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE0B;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADyB,CAUzB;AACD,GAXM,MAWA,IAAIxB,SAAS,KAAK,CAAlB,EAAoB;AACzByB,IAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,MAAM,GAAG,IAAIpD,KAAK,CAACqD,iBAAV,CAA4B,EAA5B,EAAgC,CAAhC,EAAmC,GAAnC,EAAwC,IAAxC,CAAb;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAxDQ7B,G;;MAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {useState} from 'react';\nimport * as THREE from \"three\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\"\nimport Registration from \"./components/Registration\";\nimport Loading from \"./components/Loading\";\nimport Rendering from \"./components/Rendering\";\n\nimport { useThree} from \"@react-three/fiber\"\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { Mesh } from \"three\";\nimport { useEffect } from \"react\";\n\nconst checkuserurl = \"http://localhost:5000/api/checkuser/\";\nconst getobjfileurl = \"http://localhost:5000/api/getfile/\";\n\nfunction ObjToPrimitive({ url, mat }) {\n  const [obj, setObj] = useState();\n  useMemo(() => new OBJLoader().load(url, setObj), [url]);\n  if (obj) {\n    obj.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.material = mat;\n      }\n    });\n    return <primitive object={obj} />;\n  }\n  return null;\n}\n\nfunction App() {\n  var file;\n  var preload;\n  const mat = new THREE.MeshPhongMaterial()\n  const [pageState, setState] = useState(0)\n  const [nextSeqId, setNextSeqId] = useState(0)\n  const [userId, setUserId] = useState('')\n  const [filename, setFilename] = useState('')\n  const handleLogin = (userName) => {\n    console.log(userName)\n    let xhttp = new XMLHttpRequest();\n    xhttp.open(\"GET\", checkuserurl+userName, true);\n    xhttp.addEventListener('load', () => {\n        console.log('Received an HTTP response.');\n        var jsonresp = JSON.parse(xhttp.response);\n        console.log(jsonresp);\n        setNextSeqId(parseInt(jsonresp.nextId));\n        setFilename(jsonresp.fileName)\n        setState(1)\n    });\n    xhttp.send();\n    setUserId(userName)\n  }\n  const load = () => {\n    const url = getobjfileurl+filename;\n    preload = ObjToPrimitive({ url: url, mat })\n    setState(2)\n  }\n  const onClick = () =>{\n    setState(3)\n  }\n  let page;\n  if(pageState === 0){\n    page = <Registration onRegister={handleLogin}/>;\n  } else if (pageState === 1){\n    page = <Loading onload={load}/>;\n  } else if (pageState === 2){\n    page = \n    <div>\n      <Rendering preload={preload}/>\n      {/* <Rendering url={getobjfileurl+filename}/> */}\n      <Button text=\"model1\" onClick={onClick}/>\n      {/* <Rendering url={getobjfileurl+filename}/>\n      <Rendering url={getobjfileurl+filename}/>\n      <Button text=\"model2\" onClick={onClick}/> */}\n    </div>;\n    //page = <Rendering file={file}/>;\n  } else if (pageState === 3){\n    page = <h1>Thanks!</h1>\n  }\n  var camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\n  return (\n    <div className=\"container\">\n      {page}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}